# No. 57 テスト集計
#
# まず受験者数を入力させ、次に受験者数ごとに英語、数学、国語の点数をスペースで区切って入力させる（具体的な入力方法は下記のscanfの使い方の説明、および入力データの中身を見よ）。入力が終了したら、英語、数学、国語の平均点、および各受験生の合計点を計算して表示するプログラムを作成せよ。受験者数は100人までとする。なお、データの個数とデータはファイルからリダイレクトで入力させればよいので、入力のためのメッセージは不要である（実行例を参照すること）。
#
#【実行例、データファイルは下のリンクから取得せよ】
# $ ./knock57 < examSmall.data
# 平均点 英語:46, 数学:51, 国語:55
# 個人合計点
# 0: 141
# 1: 114
# （途中省略）
# 8: 96
# 9: 188
# $ ./knock57 < examMiddle.data
# 平均点 英語:55, 数学:53, 国語:54
# 個人合計点
# 0: 136
# 1: 64
# （途中省略）
# 48: 265
# 49: 167
# $ ./knock57 < examLarge.data
# 平均点 英語:52, 数学:51, 国語:51
# 個人合計点
# 0: 151
# 1: 241
# （途中省略）
# 98: 107
# 99: 178
# $
#
#

require "minitest/autorun"
require "./knock57.rb"

class Knock57Test < Minitest::Test
  def test_case_1
    input = File.open("./small.txt", "r").read
    $stdin = StringIO.new(input)

    expected = <<~EOS
    平均点 英語:46, 数学:51, 国語:55
    個人合計点
    0: 141
    1: 114
    2: 107
    3: 145
    4: 201
    5: 145
    6: 201
    7: 197
    8: 96
    9: 188
    EOS

    assert_output(expected) { Knock57.execute }
  end

  def test_case_2
    input = File.open("./middle.txt", "r").read
    $stdin = StringIO.new(input)

    expected = <<~EOS
    平均点 英語:55, 数学:53, 国語:54
    個人合計点
    0: 136
    1: 64
    2: 144
    3: 101
    4: 160
    5: 261
    6: 197
    7: 164
    8: 143
    9: 116
    10: 154
    11: 185
    12: 221
    13: 142
    14: 154
    15: 179
    16: 214
    17: 141
    18: 139
    19: 80
    20: 173
    21: 191
    22: 180
    23: 144
    24: 111
    25: 213
    26: 219
    27: 88
    28: 180
    29: 193
    30: 129
    31: 198
    32: 176
    33: 207
    34: 102
    35: 109
    36: 211
    37: 169
    38: 215
    39: 231
    40: 181
    41: 157
    42: 115
    43: 106
    44: 236
    45: 114
    46: 181
    47: 132
    48: 265
    49: 167
    EOS

    assert_output(expected) { Knock57.execute }
  end

  def test_case_3
    input = File.open("./large.txt", "r").read
    $stdin = StringIO.new(input)

    expected = <<~EOS
    平均点 英語:52, 数学:51, 国語:51
    個人合計点
    0: 151
    1: 241
    2: 145
    3: 146
    4: 156
    5: 118
    6: 128
    7: 97
    8: 184
    9: 249
    10: 203
    11: 81
    12: 191
    13: 193
    14: 58
    15: 197
    16: 77
    17: 131
    18: 165
    19: 184
    20: 135
    21: 182
    22: 164
    23: 126
    24: 94
    25: 146
    26: 260
    27: 117
    28: 170
    29: 70
    30: 139
    31: 202
    32: 216
    33: 82
    34: 117
    35: 112
    36: 101
    37: 111
    38: 107
    39: 176
    40: 106
    41: 227
    42: 253
    43: 171
    44: 243
    45: 199
    46: 192
    47: 88
    48: 177
    49: 153
    50: 234
    51: 139
    52: 103
    53: 166
    54: 148
    55: 90
    56: 141
    57: 193
    58: 127
    59: 227
    60: 195
    61: 116
    62: 98
    63: 193
    64: 141
    65: 189
    66: 206
    67: 135
    68: 135
    69: 224
    70: 204
    71: 74
    72: 212
    73: 179
    74: 185
    75: 85
    76: 246
    77: 139
    78: 177
    79: 134
    80: 162
    81: 177
    82: 182
    83: 190
    84: 126
    85: 168
    86: 78
    87: 197
    88: 172
    89: 116
    90: 81
    91: 126
    92: 95
    93: 54
    94: 162
    95: 164
    96: 289
    97: 141
    98: 107
    99: 178
    EOS

    assert_output(expected) { Knock57.execute }
  end
end
